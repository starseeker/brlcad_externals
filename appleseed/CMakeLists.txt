# Unless we have ENABLE_ALL set, based the building of appleseed on
# the system detection results
if (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/appleseed)
if (ENABLE_ALL AND NOT DEFINED ENABLE_APPLESEED)
  set(ENABLE_APPLESEED ON)
endif (ENABLE_ALL AND NOT DEFINED ENABLE_APPLESEED)

if (NOT ENABLE_APPLESEED)

  find_package(APPLESEED)

  if (NOT APPLESEED_FOUND AND NOT DEFINED ENABLE_APPLESEED)
    set(ENABLE_APPLESEED "ON" CACHE BOOL "Enable appleseed build")
  endif (NOT APPLESEED_FOUND AND NOT DEFINED ENABLE_APPLESEED)

endif (NOT ENABLE_APPLESEED)
set(ENABLE_APPLESEED "${ENABLE_APPLESEED}" CACHE BOOL "Enable appleseed build")

if (ENABLE_APPLESEED)

  set(APPLESEED_DEPENDS BOOST EMBREE TBB JPEG PNG TIFF LLVM LZ4 OPENCOLORIO OPENEXR OPENIMAGEIO OSL XERCES_C ZLIB)
  TargetVars(APPLESEED_DEPENDS)
  if (TARGET ZLIB_BLD)
    set(Z_PREFIX_STR "brl_")
  endif (TARGET ZLIB_BLD)

  ExternalProject_Add(APPLESEED_BLD
    SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/appleseed"
    BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
    #PATCH_COMMAND ${PATCH_EXECUTABLE};-E;-p1;${PATCH_OPTIONS};-i;${CMAKE_CURRENT_SOURCE_DIR}/appleseed.patch
    CMAKE_ARGS
    ${BUILD_TYPE_SPECIFIER}
    $<$<BOOL:${ZLIB_TARGET}>:-DZ_PREFIX=ON>
    $<$<BOOL:${ZLIB_TARGET}>:-DZ_PREFIX_STR=${Z_PREFIX_STR}>
    -DEMBREE_ROOT=$<$<BOOL:${EMBREE_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DISPC_ROOT=$<$<BOOL:${ISPC_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DTBB_ROOT=$<$<BOOL:${TBB_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DJPEG_ROOT=$<$<BOOL:${JPEG_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DPNG_ROOT=$<$<BOOL:${PNG_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DTIFF_ROOT=$<$<BOOL:${TIFF_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DLLVM_ROOT=$<$<BOOL:${LLVM_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DLZ4_ROOT=$<$<BOOL:${LZ4_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOPENCOLORIO_ROOT=$<$<BOOL:${OPENCOLORIO_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOPENEXR_ROOT=$<$<BOOL:${OPENEXR_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOPENIMAGEIO_ROOT=$<$<BOOL:${OPENIMAGEIO_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOSL_ROOT=$<$<BOOL:${OSL_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DXERCES_C_ROOT=$<$<BOOL:${XERCES_C_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DZLIB_C_ROOT=$<$<BOOL:${ZLIB_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DWITH_STUDIO=OFF
    -DWITH_BENCH=OFF
    -DWITH_PYTHON2_BINDINGS=OFF
    -DWITH_PYTHON3_BINDINGS=OFF
    -DINSTALL_TESTS=OFF
    -DINSTALL_API_EXAMPLES=OFF
    -DBIN_DIR=${BIN_DIR}
    -DLIB_DIR=${LIB_DIR}
    -DBUILD_STATIC_LIBS=${BUILD_STATIC_LIBS}
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_BUNDLE_INSTALL_PREFIX}
    LOG_CONFIGURE ${EXT_BUILD_QUIET}
    LOG_BUILD ${EXT_BUILD_QUIET}
    LOG_INSTALL ${EXT_BUILD_QUIET}
    LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
    STEP_TARGETS install
    )

  TargetInstallDeps(APPLESEED APPLESEED_DEPENDS)

  if (TARGET PATCH_BLD)
    ExternalProject_Add_StepDependencies(APPLESEED_BLD configure PATCH_BLD-install)
  endif (TARGET PATCH_BLD)

endif (ENABLE_APPLESEED)

# Copy the license into position in CMAKE_BUNDLE_INSTALL_PREFIX
file(MAKE_DIRECTORY ${CMAKE_BUNDLE_INSTALL_PREFIX}/doc/legal/other)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/appleseed/LICENSE.txt
  ${CMAKE_BUNDLE_INSTALL_PREFIX}/doc/legal/other/appleseed.txt
  COPYONLY
  )
endif (EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/appleseed)

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

