# Unless we have ENABLE_ALL set, base the building of the tools on
# the system detection results
if (ENABLE_ALL AND NOT DEFINED ENABLE_FLEX)
  set(ENABLE_FLEX ON)
endif (ENABLE_ALL AND NOT DEFINED ENABLE_FLEX)
if (ENABLE_ALL AND NOT DEFINED ENABLE_BISON)
  set(ENABLE_BISON ON)
endif (ENABLE_ALL AND NOT DEFINED ENABLE_BISON)

if (WIN32)
  # With winflexbison do all or nothing
  if (ENABLE_FLEX OR ENABLE_BISON)
    set(ENABLE_FLEX ON)
    set(ENABLE_BISON ON)
  endif (ENABLE_FLEX OR ENABLE_BISON)
endif (WIN32)


if (NOT ENABLE_FLEX)

  find_package(FLEX)

  if (NOT FLEX_FOUND AND NOT DEFINED ENABLE_FLEX)
    set(ENABLE_FLEX ON)
  endif (NOT FLEX_FOUND AND NOT DEFINED ENABLE_FLEX)

endif (NOT ENABLE_FLEX)

if (NOT ENABLE_BISON)

  find_package(BISON)

  if (NOT BISON_FOUND AND NOT DEFINED ENABLE_BISON)
    set(ENABLE_BISON ON)
  endif (NOT BISON_FOUND AND NOT DEFINED ENABLE_BISON)

endif (NOT ENABLE_BISON)

set(ENABLE_FLEX "${ENABLE_FLEX}" CACHE BOOL "Enable flex build")
set(ENABLE_BISON "${ENABLE_BISON}" CACHE BOOL "Enable GNU Bison build")

if (WIN32 AND ENABLE_FLEX)
  ExternalProject_Add(FLEX_BLD
    URL "${CMAKE_CURRENT_SOURCE_DIR}/winflexbison"
    BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
    CMAKE_ARGS
    ${BUILD_TYPE_SPECIFIER}
    -DBIN_DIR=${BIN_DIR}
    -DLIB_DIR=${LIB_DIR}
    -DBUILD_STATIC_LIBS=${BUILD_STATIC_LIBS}
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_NOBUNDLE_INSTALL_PREFIX}
    LOG_CONFIGURE ${EXT_BUILD_QUIET}
    LOG_BUILD ${EXT_BUILD_QUIET}
    LOG_INSTALL ${EXT_BUILD_QUIET}
    LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
    STEP_TARGETS install
    )
endif (WIN32 AND ENABLE_FLEX)

if (NOT WIN32)
  if (ENABLE_FLEX)
    set(FLEX_SRC_DIR "${CMAKE_CURRENT_BINARY_DIR}/FLEX_BLD-prefix/src/FLEX_BLD")

    ExternalProject_Add(FLEX_BLD
      URL "${CMAKE_CURRENT_SOURCE_DIR}/flex"
      BUILD_IN_SOURCE ON
      BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
      PATCH_COMMAND ${PATCH_EXECUTABLE};-E;-p1;${PATCH_OPTIONS};-i;${CMAKE_CURRENT_SOURCE_DIR}/flex.patch
      CONFIGURE_COMMAND ${FLEX_SRC_DIR}/autogen.sh
      COMMAND ${FLEX_SRC_DIR}/configure --prefix=${CMAKE_NOBUNDLE_INSTALL_PREFIX}
      BUILD_COMMAND make -j${pcnt}
      INSTALL_COMMAND make install
      DEPENDS ${ZLIB_TARGET}
      LOG_CONFIGURE ${EXT_BUILD_QUIET}
      LOG_BUILD ${EXT_BUILD_QUIET}
      LOG_INSTALL ${EXT_BUILD_QUIET}
      LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
      STEP_TARGETS install
      )
  endif (ENABLE_FLEX)
  if (ENABLE_BISON)
    set(BISON_SRC_DIR "${CMAKE_CURRENT_BINARY_DIR}/BISON_BLD-prefix/src/BISON_BLD")

    ExternalProject_Add(BISON_BLD
      URL "${CMAKE_CURRENT_SOURCE_DIR}/bison"
      BUILD_IN_SOURCE ON
      BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
      PATCH_COMMAND ${PATCH_EXECUTABLE};-E;-p1;${PATCH_OPTIONS};-i;${CMAKE_CURRENT_SOURCE_DIR}/bison.patch
      CONFIGURE_COMMAND chmod +x ${BISON_SRC_DIR}/autogen.sh
      COMMAND ${BISON_SRC_DIR}/autogen.sh
      COMMAND ${BISON_SRC_DIR}/configure --prefix=${CMAKE_NOBUNDLE_INSTALL_PREFIX}
      BUILD_COMMAND make -j${pcnt}
      INSTALL_COMMAND make install
      DEPENDS ${ZLIB_TARGET}
      LOG_CONFIGURE ${EXT_BUILD_QUIET}
      LOG_BUILD ${EXT_BUILD_QUIET}
      LOG_INSTALL ${EXT_BUILD_QUIET}
      LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
      STEP_TARGETS install
      )
  endif (ENABLE_BISON)
endif (NOT WIN32)

if (TARGET PATCH_BLD AND TARGET FLEX_BLD)
  ExternalProject_Add_StepDependencies(FLEX_BLD configure PATCH_BLD-install)
endif (TARGET PATCH_BLD AND TARGET FLEX_BLD)
if (TARGET PATCH_BLD AND TARGET BISON_BLD)
  ExternalProject_Add_StepDependencies(BISON_BLD configure PATCH_BLD-install)
endif (TARGET PATCH_BLD AND TARGET BISON_BLD)

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8


