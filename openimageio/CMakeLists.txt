# Unless we have ENABLE_ALL set, based the building of openimageio on
# the system detection results
if (ENABLE_ALL AND NOT DEFINED ENABLE_OPENIMAGEIO)
  set(ENABLE_OPENIMAGEIO ON)
endif (ENABLE_ALL AND NOT DEFINED ENABLE_OPENIMAGEIO)

if (NOT ENABLE_OPENIMAGEIO)

  find_package(OPENIMAGEIO)

  if (NOT OPENIMAGEIO_FOUND AND NOT DEFINED ENABLE_OPENIMAGEIO)
    set(ENABLE_OPENIMAGEIO "ON" CACHE BOOL "Enable openimageio build")
  endif (NOT OPENIMAGEIO_FOUND AND NOT DEFINED ENABLE_OPENIMAGEIO)

endif (NOT ENABLE_OPENIMAGEIO)
set(ENABLE_OPENIMAGEIO "${ENABLE_OPENIMAGEIO}" CACHE BOOL "Enable openimageio build")

if (ENABLE_OPENIMAGEIO)

  set(OPENIMAGEIO_DEPENDS BOOST FMT JPEG OPENCOLORIO OPENEXR PNG TIFF ZLIB)
  TargetVars(OPENIMAGEIO_DEPENDS)
  if (TARGET ZLIB_BLD)
    set(Z_PREFIX_STR "brl_")
  endif (TARGET ZLIB_BLD)

  ExternalProject_Add(OPENIMAGEIO_BLD
    URL "${CMAKE_CURRENT_SOURCE_DIR}/openimageio"
    BUILD_ALWAYS ${EXT_BUILD_ALWAYS} ${LOG_OPTS}
    PATCH_COMMAND ${PATCH_EXECUTABLE};-E;-p1;${PATCH_OPTIONS};-i;${CMAKE_CURRENT_SOURCE_DIR}/openimageio.patch
    CMAKE_ARGS
    ${BUILD_TYPE_SPECIFIER}
    $<$<BOOL:${ZLIB_TARGET}>:-DZ_PREFIX=ON>
    $<$<BOOL:${ZLIB_TARGET}>:-DZ_PREFIX_STR=${Z_PREFIX_STR}>
    -DBOOST_ROOT=$<$<BOOL:${BOOST_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DFMT_ROOT=$<$<BOOL:${FMT_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DJPEG_ROOT=$<$<BOOL:${JPEG_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOPENEXR_ROOT=$<$<BOOL:${OPENEXR_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DOpenColorIO_ROOT=$<$<BOOL:${OPENCOLORIO_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DPNG_ROOT=$<$<BOOL:${PNG_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DTIFF_ROOT=$<$<BOOL:${TIFF_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DZLIB_ROOT=$<$<BOOL:${ZLIB_TARGET}>:${CMAKE_BUNDLE_INSTALL_PREFIX}>
    -DBUILD_DOCS=OFF
    -DOIIO_BUILD_TESTS=OFF
    -DOIIO_BUILD_TOOLS=OFF
    -DOIIO_DISABLE_DCMTK=ON
    -DOIIO_DISABLE_FFMPEG=ON
    -DOIIO_DISABLE_GIF=ON
    -DOIIO_DISABLE_HEIF=ON
    -DOIIO_DISABLE_OPENCV=ON
    -DOIIO_DISABLE_OPENJPEG=ON
    -DOIIO_DISABLE_PTEX=ON
    -DOIIO_DISABLE_R3DSDK=ON
    -DOIIO_DISABLE_RAW=ON
    -DOIIO_DISABLE_VDB=ON
    -DOIIO_DISABLE_WEBP=ON
    -DUSE_QT=OFF
    -DUSE_PYTHON=OFF
    -DUSE_RD3SDK=OFF
    -DBIN_DIR=${BIN_DIR}
    -DLIB_DIR=${LIB_DIR}
    -DBUILD_STATIC_LIBS=${BUILD_STATIC_LIBS}
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DCMAKE_INSTALL_PREFIX=${CMAKE_BUNDLE_INSTALL_PREFIX}
    LOG_CONFIGURE ${EXT_BUILD_QUIET}
    LOG_BUILD ${EXT_BUILD_QUIET}
    LOG_INSTALL ${EXT_BUILD_QUIET}
    LOG_OUTPUT_ON_FAILURE ${EXT_BUILD_QUIET}
    STEP_TARGETS install
    )

  TargetInstallDeps(OPENIMAGEIO OPENIMAGEIO_DEPENDS)

  if (TARGET PATCH_BLD)
    ExternalProject_Add_StepDependencies(OPENIMAGEIO_BLD configure PATCH_BLD-install)
  endif (TARGET PATCH_BLD)

endif (ENABLE_OPENIMAGEIO)

# Copy the license into position in CMAKE_BUNDLE_INSTALL_PREFIX
file(MAKE_DIRECTORY ${CMAKE_BUNDLE_INSTALL_PREFIX}/doc/legal/other)
configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/openimageio/LICENSE.md
  ${CMAKE_BUNDLE_INSTALL_PREFIX}/doc/legal/other/openimageio.txt
  COPYONLY
  )

# Local Variables:
# tab-width: 8
# mode: cmake
# indent-tabs-mode: t
# End:
# ex: shiftwidth=2 tabstop=8

